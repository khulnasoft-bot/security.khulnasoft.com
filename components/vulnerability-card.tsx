"use client"

// English: Reusable card for listing a vulnerability with severity and affected packages.
import { Card, CardContent } from "@/components/ui/card"
import Link from "next/link"

type VulnType = "application" | "os" | "cloud"

export interface VulnerabilityCardProps {
  id: string
  title: string
  severity: number // English: CVSS-like score 0.0 - 10.0
  affects: string[]
  type: VulnType
}

function severityColor(score: number) {
  if (score >= 9) return "bg-red-100 text-red-700 dark:bg-red-500/15 dark:text-red-400"
  if (score >= 7) return "bg-orange-100 text-orange-700 dark:bg-orange-500/15 dark:text-orange-400"
  if (score >= 4) return "bg-yellow-100 text-yellow-700 dark:bg-yellow-500/15 dark:text-yellow-400"
  return "bg-green-100 text-green-700 dark:bg-green-500/15 dark:text-green-400"
}

export default function VulnerabilityCard(props: VulnerabilityCardProps) {
  const { id, title, severity, affects, type } = props
  return (
    <Card className="border-primary/10 hover:border-primary/30 transition">
      <CardContent className="pt-6 space-y-3">
        <div className="flex items-start justify-between gap-3">
          <div className="min-w-0">
            <Link href={`/vulnerability/${encodeURIComponent(id)}`} className="font-semibold hover:underline">
              {id}
            </Link>
            <div className="text-sm text-muted-foreground truncate">{title}</div>
          </div>
          <span
            className={`inline-flex items-center rounded-full px-2 py-1 text-xs font-medium ${severityColor(severity)}`}
          >
            {severity.toFixed(1)}
          </span>
        </div>
        <div className="flex flex-wrap items-center gap-2 text-xs">
          <span className="rounded-full bg-muted px-2 py-0.5 text-muted-foreground">Type: {type}</span>
          {affects.slice(0, 3).map((pkg) => (
            <span key={pkg} className="rounded-full border px-2 py-0.5">
              {pkg}
            </span>
          ))}
          {affects.length > 3 && <span className="text-muted-foreground">+{affects.length - 3} more</span>}
        </div>
      </CardContent>
    </Card>
  )
}
