import { Card, CardContent, CardHeader } from "@/components/ui/card"
import Link from "next/link"
import { AlertTriangle, Server, Cloud } from "lucide-react"

interface VulnerabilityCardProps {
  id: string
  title: string
  severity: number
  affects: string[]
  type: "application" | "os" | "cloud"
}

export default function VulnerabilityCard({ id, title, severity, affects, type }: VulnerabilityCardProps) {
  // Determine severity class
  let severityClass = "severity-medium"
  let shadowColor = "shadow-amber-500"

  if (severity < 3.0) {
    severityClass = "severity-low"
    shadowColor = "shadow-green-500"
  } else if (severity >= 4.0) {
    severityClass = "severity-high"
    shadowColor = "shadow-red-500"
  } else if (severity >= 7.0) {
    severityClass = "severity-critical"
    shadowColor = "shadow-red-700"
  }

  // Get icon based on type
  const getTypeIcon = () => {
    switch (type) {
      case "application":
        return <AlertTriangle className="h-5 w-5 text-amber-500" />
      case "os":
        return <Server className="h-5 w-5 text-blue-500" />
      case "cloud":
        return <Cloud className="h-5 w-5 text-purple-500" />
    }
  }

  return (
    <Link href={`/vulnerability/${id}`}>
      <Card className="bg-background/40 backdrop-blur-sm border-primary/20 card-hover transition-all duration-300">
        <CardHeader className="p-4 pb-0 flex-row items-start justify-between">
          <div className="flex items-start gap-3">
            <div className="mt-1">{getTypeIcon()}</div>
            <div>
              <h3 className="font-medium">{title}</h3>
              <p className="text-sm text-muted-foreground">{id}</p>
            </div>
          </div>
          <div className={`${severityClass} severity-badge text-sm ${shadowColor}`}>{severity.toFixed(1)}</div>
        </CardHeader>
        <CardContent className="p-4 pt-2">
          <div className="mt-2">
            <p className="text-sm text-muted-foreground">Affects</p>
            <div className="flex flex-wrap gap-1 mt-1">
              {affects.map((item) => (
                <code key={item} className="text-xs bg-primary/10 px-1.5 py-0.5 rounded border border-primary/20">
                  {item}
                </code>
              ))}
            </div>
          </div>
        </CardContent>
      </Card>
    </Link>
  )
}
